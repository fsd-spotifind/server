generator db {
    provider = "go run github.com/steebchen/prisma-client-go"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           String   @id @default(cuid())
    username     String   @unique
    passwordHash String   @unique
    isVerified   Boolean  @default(false) @map("is_verified")
    email        String   @unique
    bio          String?
    photoUrl     String?  @map("photo_url")
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    friendsInitiated Friend[]        @relation("UserOne")
    friendsReceived  Friend[]        @relation("UserTwo")
    songOfTheDay     SongOfTheDay[]
    userStatistics   UserStatistic[]

    @@map("user")
}

model Friend {
    id        String       @id @default(cuid())
    status    FriendStatus
    userOneId String       @map("user_one_id")
    userTwoId String       @map("user_two_id")
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    userOne User @relation("UserOne", fields: [userOneId], references: [id])
    userTwo User @relation("UserTwo", fields: [userTwoId], references: [id])

    @@map("friend")
}

model SongOfTheDay {
    id        String   @id @default(cuid())
    userId    String   @map("user_id")
    trackId   String
    trackName String
    photoUrl  String?  @map("photo_url")
    note      String?
    mood      String?
    setAt     DateTime @default(now())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id])

    @@map("song_of_the_day")
}

model UserStatistic {
    id            String          @id @default(cuid())
    userId        String          @unique @map("user_id")
    period        StatisticPeriod
    totalTracks   Int             @default(0)
    totalDuration Int             @default(0)
    uniqueArtists Int             @default(0)
    vibe          String?
    topArtistsIds String[]
    topTracksIds  String[]
    topAlbumsIds  String[]
    topGenresIds  String[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt

    user User @relation(fields: [userId], references: [id])

    @@map("user_statistic")
}

// TODO: Add User-Genre table for discovery feature

enum StatisticPeriod {
    WEEKLY     @map("weekly")
    MONTHLY    @map("monthly")
    SEMIANNUAL @map("semiannual")
    ANNUAL     @map("annual")
}

enum FriendStatus {
    ACTIVE   @map("active")
    BLOCKED  @map("blocked")
    INACTIVE @map("inactive")
}
